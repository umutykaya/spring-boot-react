services:
  app:
    build:
      context: /Users/yalcinkayau/Desktop/workbench/spring-boot-react
      dockerfile: /Users/yalcinkayau/Desktop/workbench/spring-boot-react/Dockerfile
    container_name: react-and-spring-data-rest
    depends_on:
      postgresqldb:
        condition: service_started
    image: react-and-spring-data-rest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: 8080
      protocol: tcp
  postgresqldb:
    environment:
      POSTGRES_DB: employeedb
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: 5432
      protocol: tcp
networks:
  default:
    name: spring-boot-react_default
services:
  app:
    build:
      context: /Users/yalcinkayau/Desktop/workbench/spring-boot-react
      dockerfile: /Users/yalcinkayau/Desktop/workbench/spring-boot-react/Dockerfile
    container_name: react-and-spring-data-rest
    depends_on:
      postgresqldb:
        condition: service_started
    image: umutykaya/react-and-spring-data-rest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: 8080
      protocol: tcp
  postgresqldb:
    environment:
      POSTGRES_DB: employeedb
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: 5432
      protocol: tcp
networks:
  default:
    name: spring-boot-react_default
